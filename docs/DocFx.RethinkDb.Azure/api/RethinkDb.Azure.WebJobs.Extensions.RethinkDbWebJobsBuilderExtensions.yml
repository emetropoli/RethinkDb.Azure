### YamlMime:ManagedReference
items:
- uid: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions
  commentId: T:RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions
  id: RethinkDbWebJobsBuilderExtensions
  parent: RethinkDb.Azure.WebJobs.Extensions
  children:
  - RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder)
  - RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder,System.Action{RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions})
  langs:
  - csharp
  - vb
  name: RethinkDbWebJobsBuilderExtensions
  nameWithType: RethinkDbWebJobsBuilderExtensions
  fullName: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions
  type: Class
  source:
    remote:
      path: C:/Users/tpecz/Projekty/RethinkDb.Azure/src/RethinkDb.Azure.WebJobs.Extensions/RethinkDbWebJobsBuilderExtensions.cs
    id: RethinkDbWebJobsBuilderExtensions
    path: ../../src/RethinkDb.Azure.WebJobs.Extensions/RethinkDbWebJobsBuilderExtensions.cs
    startLine: 11
  assemblies:
  - RethinkDb.Azure.WebJobs.Extensions
  namespace: RethinkDb.Azure.WebJobs.Extensions
  summary: "\nThe <xref href=\"Microsoft.Azure.WebJobs.IWebJobsBuilder\" data-throw-if-not-resolved=\"false\"></xref> extension methods for RethinkDB binding extensions.\n"
  example: []
  syntax:
    content: public static class RethinkDbWebJobsBuilderExtensions
    content.vb: Public Module RethinkDbWebJobsBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder,System.Action{RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions})
  commentId: M:RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder,System.Action{RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions})
  id: AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder,System.Action{RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions})
  isExtensionMethod: true
  parent: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddRethinkDb(IWebJobsBuilder, Action<RethinkDbOptions>)
  nameWithType: RethinkDbWebJobsBuilderExtensions.AddRethinkDb(IWebJobsBuilder, Action<RethinkDbOptions>)
  fullName: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder, System.Action<RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions>)
  type: Method
  source:
    remote:
      path: C:/Users/tpecz/Projekty/RethinkDb.Azure/src/RethinkDb.Azure.WebJobs.Extensions/RethinkDbWebJobsBuilderExtensions.cs
    id: AddRethinkDb
    path: ../../src/RethinkDb.Azure.WebJobs.Extensions/RethinkDbWebJobsBuilderExtensions.cs
    startLine: 18
  assemblies:
  - RethinkDb.Azure.WebJobs.Extensions
  namespace: RethinkDb.Azure.WebJobs.Extensions
  summary: "\nAdds the RethinkDb binding extensions to the provided <xref href=\"Microsoft.Azure.WebJobs.IWebJobsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IWebJobsBuilder AddRethinkDb(this IWebJobsBuilder builder, Action<RethinkDbOptions> configure)
    parameters:
    - id: builder
      type: Microsoft.Azure.WebJobs.IWebJobsBuilder
      description: The <xref href="Microsoft.Azure.WebJobs.IWebJobsBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: configure
      type: System.Action{RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> to configure the provided <xref href="RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Azure.WebJobs.IWebJobsBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddRethinkDb(builder As IWebJobsBuilder, configure As Action(Of RethinkDbOptions)) As IWebJobsBuilder
  overload: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb*
  nameWithType.vb: RethinkDbWebJobsBuilderExtensions.AddRethinkDb(IWebJobsBuilder, Action(Of RethinkDbOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder, System.Action(Of RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions))
  name.vb: AddRethinkDb(IWebJobsBuilder, Action(Of RethinkDbOptions))
- uid: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder)
  commentId: M:RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder)
  id: AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder)
  isExtensionMethod: true
  parent: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddRethinkDb(IWebJobsBuilder)
  nameWithType: RethinkDbWebJobsBuilderExtensions.AddRethinkDb(IWebJobsBuilder)
  fullName: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb(Microsoft.Azure.WebJobs.IWebJobsBuilder)
  type: Method
  source:
    remote:
      path: C:/Users/tpecz/Projekty/RethinkDb.Azure/src/RethinkDb.Azure.WebJobs.Extensions/RethinkDbWebJobsBuilderExtensions.cs
    id: AddRethinkDb
    path: ../../src/RethinkDb.Azure.WebJobs.Extensions/RethinkDbWebJobsBuilderExtensions.cs
    startLine: 40
  assemblies:
  - RethinkDb.Azure.WebJobs.Extensions
  namespace: RethinkDb.Azure.WebJobs.Extensions
  summary: "\nAdds the RethinkDb binding extensions to the provided <xref href=\"Microsoft.Azure.WebJobs.IWebJobsBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IWebJobsBuilder AddRethinkDb(this IWebJobsBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.Azure.WebJobs.IWebJobsBuilder
      description: The <xref href="Microsoft.Azure.WebJobs.IWebJobsBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    return:
      type: Microsoft.Azure.WebJobs.IWebJobsBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddRethinkDb(builder As IWebJobsBuilder) As IWebJobsBuilder
  overload: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Azure.WebJobs.IWebJobsBuilder
  commentId: T:Microsoft.Azure.WebJobs.IWebJobsBuilder
  parent: Microsoft.Azure.WebJobs
  isExternal: true
  name: IWebJobsBuilder
  nameWithType: IWebJobsBuilder
  fullName: Microsoft.Azure.WebJobs.IWebJobsBuilder
- uid: RethinkDb.Azure.WebJobs.Extensions
  commentId: N:RethinkDb.Azure.WebJobs.Extensions
  name: RethinkDb.Azure.WebJobs.Extensions
  nameWithType: RethinkDb.Azure.WebJobs.Extensions
  fullName: RethinkDb.Azure.WebJobs.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.WebJobs
  commentId: N:Microsoft.Azure.WebJobs
  name: Microsoft.Azure.WebJobs
  nameWithType: Microsoft.Azure.WebJobs
  fullName: Microsoft.Azure.WebJobs
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions
  commentId: T:RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions
  name: RethinkDbOptions
  nameWithType: RethinkDbOptions
  fullName: RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions
- uid: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb*
  commentId: Overload:RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb
  name: AddRethinkDb
  nameWithType: RethinkDbWebJobsBuilderExtensions.AddRethinkDb
  fullName: RethinkDb.Azure.WebJobs.Extensions.RethinkDbWebJobsBuilderExtensions.AddRethinkDb
- uid: System.Action{RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions}
  commentId: T:System.Action{RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions}
  parent: System
  definition: System.Action`1
  name: Action<RethinkDbOptions>
  nameWithType: Action<RethinkDbOptions>
  fullName: System.Action<RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions>
  nameWithType.vb: Action(Of RethinkDbOptions)
  fullName.vb: System.Action(Of RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions)
  name.vb: Action(Of RethinkDbOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions
    name: RethinkDbOptions
    nameWithType: RethinkDbOptions
    fullName: RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions
    name: RethinkDbOptions
    nameWithType: RethinkDbOptions
    fullName: RethinkDb.Azure.WebJobs.Extensions.RethinkDbOptions
  - name: )
    nameWithType: )
    fullName: )
